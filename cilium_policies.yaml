apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-cpenkxvpznyryab
  namespace: explorer
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        k8s-app: kube-dns
        k8s:io.kubernetes.pod.namespace: kube-system
    toPorts:
    - ports:
      - port: "53"
        protocol: UDP
  endpointSelector:
    matchLabels:
      container: knoxautopolicy
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-dgndidkkyvquomt
  namespace: explorer
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        k8s-app: kube-dns
        k8s:io.kubernetes.pod.namespace: kube-system
    toPorts:
    - ports:
      - port: "53"
        protocol: UDP
  endpointSelector:
    matchLabels:
      container: knoxautopolicy
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-gtwuxmsljcxplap
  namespace: explorer
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        k8s-app: hubble-relay
        k8s:io.kubernetes.pod.namespace: kube-system
    toPorts:
    - ports:
      - port: "4245"
        protocol: TCP
  endpointSelector:
    matchLabels:
      container: knoxautopolicy
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-lqxvmpdlldijnxm
  namespace: explorer
spec:
  egress:
  - toCIDR:
    - 35.184.149.222/32
    toPorts:
    - ports:
      - port: "443"
        protocol: TCP
  endpointSelector:
    matchLabels:
      container: knoxautopolicy
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-odijibjnzremklp
  namespace: explorer
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        k8s:io.kubernetes.pod.namespace: kube-system
        kubearmor-app: kubearmor-relay
    toPorts:
    - ports:
      - port: "32767"
        protocol: TCP
  endpointSelector:
    matchLabels:
      container: knoxautopolicy
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-vtwkekxjcgnnuaj
  namespace: explorer
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        app.kubernetes.io/component: primary
        app.kubernetes.io/instance: mysql
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: mysql
        helm.sh/chart: mysql-8.6.1
        k8s:io.kubernetes.pod.namespace: explorer
    toPorts:
    - ports:
      - port: "3306"
        protocol: TCP
  endpointSelector:
    matchLabels:
      container: knoxautopolicy
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-xdtcwqyvrcatbzb
  namespace: explorer
spec:
  endpointSelector:
    matchLabels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: mysql
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: mysql
      helm.sh/chart: mysql-8.6.1
  ingress:
  - fromEndpoints:
    - matchLabels:
        container: knoxautopolicy
        k8s:io.kubernetes.pod.namespace: explorer
    toPorts:
    - ports:
      - port: "3306"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-eaipkuxuiraokjh
  namespace: go-poc
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        io.kompose.service: mongodb
        k8s:io.kubernetes.pod.namespace: go-poc
    toPorts:
    - ports:
      - port: "27017"
        protocol: TCP
  endpointSelector:
    matchLabels:
      io.kompose.service: digota
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-pseltdnyuwiwogp
  namespace: go-poc
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        k8s-app: kube-dns
        k8s:io.kubernetes.pod.namespace: kube-system
    toPorts:
    - ports:
      - port: "53"
        protocol: UDP
  endpointSelector:
    matchLabels:
      io.kompose.service: digota
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-tamjdbcslqcgrmb
  namespace: go-poc
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        io.kompose.service: zookeeper
        k8s:io.kubernetes.pod.namespace: go-poc
    toPorts:
    - ports:
      - port: "2181"
        protocol: TCP
  endpointSelector:
    matchLabels:
      io.kompose.service: digota
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-egress-yghamufptrcvgsy
  namespace: go-poc
spec:
  egress:
  - toEndpoints:
    - matchLabels:
        k8s-app: kube-dns
        k8s:io.kubernetes.pod.namespace: kube-system
    toPorts:
    - ports:
      - port: "53"
        protocol: UDP
  endpointSelector:
    matchLabels:
      io.kompose.service: digota
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-eqjpvsgskzltaaf
  namespace: go-poc
spec:
  endpointSelector:
    matchLabels:
      io.kompose.service: zookeeper
  ingress:
  - fromEndpoints:
    - matchLabels:
        io.kompose.service: digota
        k8s:io.kubernetes.pod.namespace: go-poc
    toPorts:
    - ports:
      - port: "2181"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-utcokvjxfqotxfo
  namespace: go-poc
spec:
  endpointSelector:
    matchLabels:
      io.kompose.service: mongodb
  ingress:
  - fromEndpoints:
    - matchLabels:
        io.kompose.service: digota
        k8s:io.kubernetes.pod.namespace: go-poc
    toPorts:
    - ports:
      - port: "27017"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-cdpqebltrnianra
  namespace: default
spec:
  endpointSelector:
    matchLabels:
      app: vaadin-dspublisher
  ingress:
  - fromEntities:
    - world
    - remote-node
    toPorts:
    - ports:
      - port: "8080"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-mgaxbtlvkvlqvho
  namespace: default
spec:
  endpointSelector:
    matchLabels:
      app: jboss-switchyard
  ingress:
  - fromEntities:
    - remote-node
    - world
    toPorts:
    - ports:
      - port: "8080"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-mmirgelcvazjwwu
  namespace: default
spec:
  endpointSelector:
    matchLabels:
      app: jboss-workbench
  ingress:
  - fromEntities:
    - remote-node
    - world
    toPorts:
    - ports:
      - port: "8080"
        protocol: TCP
---
apiVersion: cilium.io/v2
kind: CiliumNetworkPolicy
metadata:
  name: autopol-ingress-zhgouobbnnazerz
  namespace: go-poc
spec:
  endpointSelector:
    matchLabels:
      io.kompose.service: digota
  ingress:
  - fromEntities:
    - remote-node
    - world
    toPorts:
    - ports:
      - port: "80"
        protocol: TCP
---
